# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
else
  export EDITOR='nvim'
fi

# Ensure correct SHELL version
[ -z "$ZSH_VERSION" ] || export SHELL="/bin/zsh"

# Extra config
export HOME
export HOMEBREW_NO_ANALYTICS=1
export PYTHONDONTWRITEBYTECODE=1
export XDG_CONFIG_HOME=$HOME/.config
export GOPATH=$HOME/.go
export GO111MODULE=on

# export LANG=en_US.UTF-8
export LC_ALL=en_GB.UTF-8
export LANG=en_GB.UTF-8

if [[ $OSTYPE == 'darwin'* ]]; then
  BREW_PREFIX='/opt/homebrew'
  # Compilation flags
  export ARCHFLAGS="-arch arm64"
else
  BREW_PREFIX='/home/linuxbrew/.linuxbrew'
fi

# Manpages
export MANPATH="$BREW_PREFIX/manpages:$BREW_PREFIX/share/man:/usr/local/man:$MANPATH"

# Exports
if [ -f $HOME/.exports ]; then
  . $HOME/.exports
fi

# Path
export PATH=$BREW_PREFIX/bin:$PATH
export PATH=$BREW_PREFIX/sbin:$PATH

export PATH=$GOPATH/bin:$PATH
export PATH=$HOME/.bin:$PATH

if [ -f $HOME/.asdf/asdf.sh ]; then
    . $HOME/.asdf/asdf.sh
fi

# Aliases
if [ -f $HOME/.alias ]; then
  . $HOME/.alias
fi

# Auto completation
# Adds asdf and brew to the path before starting the engine.
fpath=(${ASDF_DIR}/completions ${BREW_PREFIX}/share/zsh/site-functions $fpath)

autoload -Uz compinit && compinit
autoload -U +X bashcompinit && bashcompinit

# History
HISTFILE=$HOME/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups 
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history 

# Other automcompletes
[ -f $HOME/.asdf/shims/terraform ] && complete -o nospace -C /home/threkk/.asdf/shims/terraform terraform
[ -f $HOME/.fzf.zsh ] && source $HOME/.fzf.zsh

# Prompt
setopt promptsubst
function _ps1_branch {
  if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
    echo -n "%F{red}$(git branch --show-current)%f"
  fi
}

function _ps1_changes {
  local staged
  local changed
  local zsh_no_git

  zsh_git="$ZSH_GIT"

  if [[ zsh_git -eq "off" ]]; then
    return
  fi

  if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
    staged=$(git diff --staged --numstat | wc -l | awk '{ print $1 }')
    changed=$(git diff --numstat | wc -l | awk '{ print $1 }')
    if [[ 0 -ne "$staged" ]]; then
      echo -n " %F{cyan}+$staged%f" 
    fi
    if [[ 0 -ne "$changed" ]]; then
      echo -n " %F{cyan}±$changed%f"
    fi
  fi
}

# name@relative_path branch +staged±changes last_status_code
export PS1='%B%F{blue}%n%f@%F{green}%~%f%b $(_ps1_branch)$(_ps1_changes) %B%(0?.%F{yellow}⌘%f.%F{magenta}⌘%f)%b '
